import React, { Component } from 'react';
import './Home.css';

// Import redirect so that the state redirects with the correct userName and stuff
import { Redirect } from 'react-router-dom';

// Import redux
import { createStore } from 'redux'

// This component displays the search bar for the application
// Searching should send a post request to the server with the name of the person being searched.
// The server will return the ouput generated by the server, which will be considered the state of our application
// Once we have the state, we can render different components based on the state
class Home extends Component {
  constructor(props) {
    super(props);
    // Set the initial state where nothing has been set
    if (this.state == null) {
      this.state = {
        redirect: false,
        searchTerm: ""
      };
    }
    // Bind the search function so that we can access this
    this.search = this.search.bind(this);
    this.alterTerm = this.alterTerm.bind(this);
    this.errorRender = this.errorRender.bind(this);
  }

  // Alter the serach Term in the state when the user types stuff
  alterTerm(event) {
    this.setState({searchTerm: event.target.value});
  }

  // Render an error if there is something wrong with the search term
  errorRender() {
    if (this.state.searchTerm.length <= 0) {
      return (
        <div className="error">
          Please enter a summoner name into the search bar
        </div>
      );
    }
  }

  // Run the search of the user by sending a request to the server
  search() {
    // The constructor guarantees that we will never have a null state
    // Set the redirect value to true so that the render will have a thing
    this.setState({redirect: true});

    // Set the redirect route to be whatever the searchTerm is
    // TODO Query Database for the search term and set the redirect route accordingly
    // If this person is not in the database, use the API to run the search script
    this.setState({redirectRoute: "/user/" + this.state.searchTerm + "/profile"});
  }

  render() {
    if (this.state.redirect && this.state.searchTerm.length > 0) {
      return <Redirect to={this.state.redirectRoute} />;
    }
    return (
      <div className="home">
        <input type="text" onChange={this.alterTerm}></input> <button onClick={this.search}>Search</button>
        {this.errorRender()}
      </div>
    );
  }
}

export default Home;
